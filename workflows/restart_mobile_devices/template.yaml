AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Restart mobile devices in a group on a schedule.

Parameters:

  JamfProUrl:
    Type: String
    Description: https://example.jamfcloud.com (No trailing slash)

  JamfConnectionArn:
    Type: String
    Description: The connection ARN from the outputs of the base resources stack.

  MobileDeviceGroupId:
    Type: Number
    Description: The mobile device group ID to query.

  Schedule:
    Type: String
    Description: Cron syntax to run this workflow (e.g. '0 12 * * ? *') https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html#cron-based

  TimeZone:
    Type: String
    Description: The time zone of the schedule (e.g. 'America/Chicago'). https://docs.aws.amazon.com/scheduler/latest/UserGuide/schedule-types.html#time-zones

Resources:

  RenameMobileDevices:
    Type: AWS::Serverless::StateMachine
    Properties:
      Name: !Sub ${AWS::StackName}-RenameMobileDevices
      Type: EXPRESS
      DefinitionSubstitutions:
        JamfProUrl: !Ref JamfProUrl
        JamfConnectionArn: !Ref JamfConnectionArn
#      DefinitionUri: ./rename_mobile_devices.asl.yaml
      Definition:
        Comment: Restart mobile devices in a group.
        StartAt: Get Group Members

        States:

          Get Group Members:
            Type: Task
            Resource: arn:aws:states:::http:invoke
            Parameters:
              ApiEndpoint.$: States.Format('${JamfProUrl}/JSSResource/mobiledevicegroups/id/{}', $.event.jssID)
              Method: GET
              Authentication:
                ConnectionArn: ${JamfConnectionArn}
              Headers:
                Accept: application/json
            Retry:
              - ErrorEquals:
                  - States.ALL
                BackoffRate: 2
                IntervalSeconds: 1
                MaxAttempts: 3
                JitterStrategy: FULL
            Next: Restart All Devices

          Restart All Devices:
            Type: Map
            End: true
            MaxConcurrency: 5
            ItemsPath: $.mobile_devices
            ItemProcessor:
              ProcessorConfig:
                Mode: INLINE
              StartAt: Get Management ID
              States:

                Get Management ID:
                  Type: Task
                  Resource: arn:aws:states:::http:invoke
                  Parameters:
                    ApiEndpoint.$: States.Format('${JamfProUrl}/api/v2/mobile-devices/{}', $.id)
                    Method: GET
                    Authentication:
                      ConnectionArn: ${JamfConnectionArn}
                  Retry:
                    - ErrorEquals:
                        - States.ALL
                      BackoffRate: 2
                      IntervalSeconds: 1
                      MaxAttempts: 3
                      JitterStrategy: FULL
                  Next: Restart Mobile Device
                  ResultSelector:
                    value: $.general.managementId
                  ResultPath: $.managementId

                Restart Mobile Device:
                  Type: Task
                  Resource: arn:aws:states:::http:invoke
                  Parameters:
                    ApiEndpoint: ${JamfProUrl}/api/preview/mdm/commands
                    Method: POST
                    Authentication:
                      ConnectionArn: ${JamfConnectionArn}
                    RequestBody:
                      commandData:
                        commandType: RESTART_DEVICE
                      clientData:
                        - managementId.$: $.managementId.value
                  Retry:
                    - ErrorEquals:
                        - States.ALL
                      BackoffRate: 2
                      IntervalSeconds: 1
                      MaxAttempts: 3
                      JitterStrategy: FULL
                  Catch:
                    - ErrorEquals:
                        - States.ALL
                      Comment: On Error
                      Next: Error Sending MDM Command
                      ResultPath: $.error
                  End: true

                  Error Sending MDM Command:
                    Type: Pass
                    Comment: An error occurred sending this commend. The details are in the input of this state.
                    End: true
      Policies:
        - Statement:
          - Effect: Allow
            Action:
              - events:RetrieveConnectionCredentials
            Resource: !Ref JamfConnectionArn
          - Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
              - secretsmanager:DescribeSecret
            Resource: arn:aws:secretsmanager:*:*:secret:events!connection/*
          - Effect: Allow
            Action: states:InvokeHTTPEndpoint
            Resource: !Sub "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-RenameMobileDevices"
            Condition:
              StringEquals:
                states:HTTPMethod: GET
              StringLike:
                states:HTTPEndpoint:
                  - !Sub "${JamfProUrl}/JSSResource/mobiledevicegroups/id/*"
                  - !Sub "${JamfProUrl}/api/v2/mobile-devices/*"
          - Effect: Allow
            Action: states:InvokeHTTPEndpoint
            Resource: !Sub "arn:${AWS::Partition}:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-RenameMobileDevices"
            Condition:
              StringEquals:
                states:HTTPMethod: POST
              StringLike:
                states:HTTPEndpoint: !Sub "${JamfProUrl}/api/preview/mdm/commands"
      Events:
        Scheduled:
          Type: ScheduleV2
          Properties:
            ScheduleExpression: !Sub "cron(${Schedule})"
